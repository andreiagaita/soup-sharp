<?xml version="1.0" encoding="UTF-8"?>
<api>
  <namespace name="Soup" library="soup-2.4">
    <object name="Address" cname="SoupAddress" parent="GObject">
      <method name="GetType" cname="soup_address_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="soup_address_new">
        <parameters>
          <parameter name="name" type="const-char*"/>
          <parameter name="port" type="guint"/>
        </parameters>
      </constructor>
      <constructor cname="soup_address_new_from_sockaddr">
        <parameters>
          <parameter name="sa" type="gpointer*"/>
          <parameter name="len" type="int"/>
        </parameters>
      </constructor>
      <constructor cname="soup_address_new_any">
        <parameters>
          <parameter name="family" type="int"/>
          <parameter name="port" type="guint"/>
        </parameters>
      </constructor>
      <method name="HashByName" cname="soup_address_hash_by_name" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="addr" type="gconstpointer"/>
        </parameters>
      </method>
      <method name="EqualByName" cname="soup_address_equal_by_name" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="addr1" type="gconstpointer"/>
          <parameter name="addr2" type="gconstpointer"/>
        </parameters>
      </method>
      <method name="HashByIp" cname="soup_address_hash_by_ip" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="addr" type="gconstpointer"/>
        </parameters>
      </method>
      <method name="EqualByIp" cname="soup_address_equal_by_ip" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="addr1" type="gconstpointer"/>
          <parameter name="addr2" type="gconstpointer"/>
        </parameters>
      </method>
      <method name="ResolveAsync" cname="soup_address_resolve_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="async_context" type="GMainContext*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="SoupAddressCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="ResolveSync" cname="soup_address_resolve_sync">
        <return-type type="guint"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="GetName" cname="soup_address_get_name">
        <return-type type="const-char*"/>
      </method>
      <method name="GetPhysical" cname="soup_address_get_physical">
        <return-type type="const-char*"/>
      </method>
      <method name="GetPort" cname="soup_address_get_port">
        <return-type type="guint"/>
      </method>
      <method name="GetSockaddr" cname="soup_address_get_sockaddr">
        <return-type type="gpointer*"/>
        <parameters>
          <parameter name="len" type="int*"/>
        </parameters>
      </method>
      <method name="GetGsockaddr" cname="soup_address_get_gsockaddr">
        <return-type type="GSocketAddress*"/>
      </method>
      <method name="IsResolved" cname="soup_address_is_resolved">
        <return-type type="gboolean"/>
      </method>
      <property name="Family" cname="family" type="SoupAddressFamily" readable="true" writable="true"/>
      <property name="Name" cname="name" type="const-gchar*" readable="true" writable="true"/>
      <property name="Physical" cname="physical" type="const-gchar*" readable="true" writable="false"/>
      <property name="Port" cname="port" type="gint" readable="true" writable="true"/>
      <property name="Sockaddr" cname="sockaddr" type="gpointer" readable="true" writable="true"/>
      <field cname="parent" name="Parent" type="GObject"/>
    </object>
    <callback name="AddressCallback" cname="SoupAddressCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="addr" type="SoupAddress*"/>
        <parameter name="status" type="guint"/>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <enum name="AddressFamily" cname="SoupAddressFamily">
      <member cname="SOUP_ADDRESS_FAMILY_INVALID" name="Invalid"/>
      <member cname="SOUP_ADDRESS_FAMILY_IPV6" name="Ipv6"/>
      <member cname="SOUP_ADDRESS_FAMILY_IPV4" name="Ipv4"/>
    </enum>
    <object name="Auth" cname="SoupAuth" parent="GObject">
      <method name="GetType" cname="soup_auth_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="soup_auth_new">
        <parameters>
          <parameter name="type" type="GType"/>
          <parameter name="msg" type="SoupMessage*"/>
          <parameter name="auth_header" type="const-char*"/>
        </parameters>
      </constructor>
      <virtual_method name="Update" cname="update">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
          <parameter name="auth_params" type="GHashTable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetProtectionSpace" cname="get_protection_space">
        <return-type type="GSList*"/>
        <parameters>
          <parameter name="source_uri" type="SoupURI*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Authenticate" cname="authenticate">
        <return-type type="void"/>
        <parameters>
          <parameter name="username" type="const-char*"/>
          <parameter name="password" type="const-char*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="IsAuthenticated" cname="is_authenticated">
        <return-type type="gboolean"/>
      </virtual_method>
      <virtual_method name="GetAuthorization" cname="get_authorization">
        <return-type type="char*"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
        </parameters>
      </virtual_method>
      <method name="Update" cname="soup_auth_update">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
          <parameter name="auth_header" type="const-char*"/>
        </parameters>
      </method>
      <method name="IsForProxy" cname="soup_auth_is_for_proxy">
        <return-type type="gboolean"/>
      </method>
      <method name="GetSchemeName" cname="soup_auth_get_scheme_name">
        <return-type type="const-char*"/>
      </method>
      <method name="GetHost" cname="soup_auth_get_host">
        <return-type type="const-char*"/>
      </method>
      <method name="GetRealm" cname="soup_auth_get_realm">
        <return-type type="const-char*"/>
      </method>
      <method name="GetInfo" cname="soup_auth_get_info">
        <return-type type="char*"/>
      </method>
      <method name="Authenticate" cname="soup_auth_authenticate">
        <return-type type="void"/>
        <parameters>
          <parameter name="username" type="const-char*"/>
          <parameter name="password" type="const-char*"/>
        </parameters>
      </method>
      <method name="IsAuthenticated" cname="soup_auth_is_authenticated">
        <return-type type="gboolean"/>
      </method>
      <method name="GetAuthorization" cname="soup_auth_get_authorization">
        <return-type type="char*"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
        </parameters>
      </method>
      <method name="GetProtectionSpace" cname="soup_auth_get_protection_space">
        <return-type type="GSList*"/>
        <parameters>
          <parameter name="source_uri" type="SoupURI*"/>
        </parameters>
      </method>
      <method name="FreeProtectionSpace" cname="soup_auth_free_protection_space">
        <return-type type="void"/>
        <parameters>
          <parameter name="space" type="GSList*"/>
        </parameters>
      </method>
      <property name="Host" cname="host" type="const-gchar*" readable="true" writable="true"/>
      <property name="Realm" cname="realm" type="const-gchar*" readable="true" writable="true"/>
      <property name="SchemeName" cname="scheme-name" type="const-gchar*" readable="true" writable="false"/>
      <field cname="parent" name="Parent" type="GObject"/>
      <signal name="SavePassword" cname="save-password">
        <return-type type="void"/>
        <parameters>
          <parameter name="auth" type="SoupAuth*"/>
          <parameter name="_object" type="const-gchar*"/>
          <parameter name="p0" type="const-gchar*"/>
        </parameters>
      </signal>
    </object>
    <object name="AuthDomain" cname="SoupAuthDomain" parent="GObject">
      <method name="GetType" cname="soup_auth_domain_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Accepts" cname="accepts">
        <return-type type="char*"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
          <parameter name="header" type="const-char*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Challenge" cname="challenge">
        <return-type type="char*"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="CheckPassword" cname="check_password">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
          <parameter name="username" type="const-char*"/>
          <parameter name="password" type="const-char*"/>
        </parameters>
      </virtual_method>
      <method name="AddPath" cname="soup_auth_domain_add_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="const-char*"/>
        </parameters>
      </method>
      <method name="RemovePath" cname="soup_auth_domain_remove_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="const-char*"/>
        </parameters>
      </method>
      <method name="SetFilter" cname="soup_auth_domain_set_filter">
        <return-type type="void"/>
        <parameters>
          <parameter name="filter" type="SoupAuthDomainFilter"/>
          <parameter name="filter_data" type="gpointer"/>
          <parameter name="dnotify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="GetRealm" cname="soup_auth_domain_get_realm">
        <return-type type="const-char*"/>
      </method>
      <method name="SetGenericAuthCallback" cname="soup_auth_domain_set_generic_auth_callback">
        <return-type type="void"/>
        <parameters>
          <parameter name="auth_callback" type="SoupAuthDomainGenericAuthCallback"/>
          <parameter name="auth_data" type="gpointer"/>
          <parameter name="dnotify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="CheckPassword" cname="soup_auth_domain_check_password">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
          <parameter name="username" type="const-char*"/>
          <parameter name="password" type="const-char*"/>
        </parameters>
      </method>
      <method name="Covers" cname="soup_auth_domain_covers">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
        </parameters>
      </method>
      <method name="Accepts" cname="soup_auth_domain_accepts">
        <return-type type="char*"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
        </parameters>
      </method>
      <method name="Challenge" cname="soup_auth_domain_challenge">
        <return-type type="void"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
        </parameters>
      </method>
      <method name="TryGenericAuthCallback" cname="soup_auth_domain_try_generic_auth_callback">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
          <parameter name="username" type="const-char*"/>
        </parameters>
      </method>
      <method name="BasicSetAuthCallback" cname="soup_auth_domain_basic_set_auth_callback">
        <return-type type="void"/>
        <parameters>
          <parameter name="callback" type="SoupAuthDomainBasicAuthCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="dnotify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="DigestSetAuthCallback" cname="soup_auth_domain_digest_set_auth_callback">
        <return-type type="void"/>
        <parameters>
          <parameter name="callback" type="SoupAuthDomainDigestAuthCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="dnotify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <property name="Filter" cname="filter" type="gpointer" readable="true" writable="true"/>
      <property name="FilterData" cname="filter-data" type="gpointer" readable="true" writable="true"/>
      <property name="GenericAuthCallback" cname="generic-auth-callback" type="gpointer" readable="true" writable="true"/>
      <property name="GenericAuthData" cname="generic-auth-data" type="gpointer" readable="true" writable="true"/>
      <property name="Proxy" cname="proxy" type="gboolean" readable="true" writable="true"/>
      <property name="Realm" cname="realm" type="const-gchar*" readable="true" writable="true"/>
      <field cname="parent" name="Parent" type="GObject"/>
    </object>
    <object name="AuthDomainBasic" cname="SoupAuthDomainBasic" parent="SoupAuthDomain">
      <method name="GetType" cname="soup_auth_domain_basic_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="soup_auth_domain_basic_new">
        <parameters>
          <parameter name="optname1" type="const-char*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </constructor>
      <property name="AuthCallback" cname="auth-callback" type="gpointer" readable="true" writable="true"/>
      <property name="AuthData" cname="auth-data" type="gpointer" readable="true" writable="true"/>
      <field cname="parent" name="Parent" type="SoupAuthDomain"/>
    </object>
    <callback name="AuthDomainBasicAuthCallback" cname="SoupAuthDomainBasicAuthCallback">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="domain" type="SoupAuthDomain*"/>
        <parameter name="msg" type="SoupMessage*"/>
        <parameter name="username" type="const-char*"/>
        <parameter name="password" type="const-char*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <object name="AuthDomainDigest" cname="SoupAuthDomainDigest" parent="SoupAuthDomain">
      <method name="GetType" cname="soup_auth_domain_digest_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="soup_auth_domain_digest_new">
        <parameters>
          <parameter name="optname1" type="const-char*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </constructor>
      <method name="EncodePassword" cname="soup_auth_domain_digest_encode_password" shared="true">
        <return-type type="char*"/>
        <parameters>
          <parameter name="username" type="const-char*"/>
          <parameter name="realm" type="const-char*"/>
          <parameter name="password" type="const-char*"/>
        </parameters>
      </method>
      <property name="AuthCallback" cname="auth-callback" type="gpointer" readable="true" writable="true"/>
      <property name="AuthData" cname="auth-data" type="gpointer" readable="true" writable="true"/>
      <field cname="parent" name="Parent" type="SoupAuthDomain"/>
    </object>
    <callback name="AuthDomainDigestAuthCallback" cname="SoupAuthDomainDigestAuthCallback">
      <return-type type="char*"/>
      <parameters>
        <parameter name="domain" type="SoupAuthDomain*"/>
        <parameter name="msg" type="SoupMessage*"/>
        <parameter name="username" type="const-char*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="AuthDomainFilter" cname="SoupAuthDomainFilter">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="domain" type="SoupAuthDomain*"/>
        <parameter name="msg" type="SoupMessage*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="AuthDomainGenericAuthCallback" cname="SoupAuthDomainGenericAuthCallback">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="domain" type="SoupAuthDomain*"/>
        <parameter name="msg" type="SoupMessage*"/>
        <parameter name="username" type="const-char*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <struct name="Buffer" cname="SoupBuffer">
      <field cname="data" name="Data" type="char*"/>
      <field cname="length" name="Length" type="gsize"/>
      <constructor cname="soup_buffer_new_take">
        <parameters>
          <parameter name="data" type="guchar*" array_len="1"/>
          <parameter name="length" type="gsize"/>
        </parameters>
      </constructor>
      <constructor cname="soup_buffer_new_subbuffer">
        <parameters>
          <parameter name="parent" type="SoupBuffer*"/>
          <parameter name="offset" type="gsize"/>
          <parameter name="length" type="gsize"/>
        </parameters>
      </constructor>
      <constructor cname="soup_buffer_new_with_owner">
        <parameters>
          <parameter name="data" type="gconstpointer"/>
          <parameter name="length" type="gsize"/>
          <parameter name="owner" type="gpointer"/>
          <parameter name="owner_dnotify" type="GDestroyNotify"/>
        </parameters>
      </constructor>
      <method name="GetOwner" cname="soup_buffer_get_owner">
        <return-type type="gpointer"/>
      </method>
      <method name="GetData" cname="soup_buffer_get_data">
        <return-type type="void"/>
        <parameters>
          <parameter name="data" type="guint8**" array_len="2"/>
          <parameter name="length" type="gsize*"/>
        </parameters>
      </method>
      <method name="Copy" cname="soup_buffer_copy">
        <return-type type="SoupBuffer*"/>
      </method>
      <method name="Free" cname="soup_buffer_free">
        <return-type type="void"/>
      </method>
    </struct>
    <callback name="ChunkAllocator" cname="SoupChunkAllocator">
      <return-type type="SoupBuffer*"/>
      <parameters>
        <parameter name="msg" type="SoupMessage*"/>
        <parameter name="max_len" type="gsize"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <struct name="ClientContext" cname="SoupClientContext">
      <method name="GetSocket" cname="soup_client_context_get_socket">
        <return-type type="SoupSocket*"/>
      </method>
      <method name="GetAddress" cname="soup_client_context_get_address">
        <return-type type="SoupAddress*"/>
      </method>
      <method name="GetHost" cname="soup_client_context_get_host">
        <return-type type="const-char*"/>
      </method>
      <method name="GetAuthDomain" cname="soup_client_context_get_auth_domain">
        <return-type type="SoupAuthDomain*"/>
      </method>
      <method name="GetAuthUser" cname="soup_client_context_get_auth_user">
        <return-type type="const-char*"/>
      </method>
    </struct>
    <struct name="Connection" cname="SoupConnection"/>
    <enum name="ConnectionState" cname="SoupConnectionState">
      <member cname="SOUP_CONNECTION_NEW" name="New"/>
      <member cname="SOUP_CONNECTION_CONNECTING" name="Connecting"/>
      <member cname="SOUP_CONNECTION_IDLE" name="Idle"/>
      <member cname="SOUP_CONNECTION_IN_USE" name="InUse"/>
      <member cname="SOUP_CONNECTION_REMOTE_DISCONNECTED" name="RemoteDisconnected"/>
      <member cname="SOUP_CONNECTION_DISCONNECTED" name="Disconnected"/>
    </enum>
    <object name="ContentDecoder" cname="SoupContentDecoder" parent="GObject">
      <method name="GetType" cname="soup_content_decoder_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="parent" name="Parent" type="GObject"/>
      <field cname="priv" name="Priv" type="SoupContentDecoderPrivate*"/>
    </object>
    <struct name="ContentDecoderPrivate" cname="SoupContentDecoderPrivate"/>
    <object name="ContentSniffer" cname="SoupContentSniffer" parent="GObject">
      <method name="GetType" cname="soup_content_sniffer_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="soup_content_sniffer_new"/>
      <virtual_method name="Sniff" cname="sniff">
        <return-type type="char*"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
          <parameter name="buffer" type="SoupBuffer*"/>
          <parameter name="params" type="GHashTable**"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetBufferSize" cname="get_buffer_size">
        <return-type type="gsize"/>
      </virtual_method>
      <method name="Sniff" cname="soup_content_sniffer_sniff">
        <return-type type="char*"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
          <parameter name="buffer" type="SoupBuffer*"/>
          <parameter name="params" type="GHashTable**"/>
        </parameters>
      </method>
      <field cname="parent" name="Parent" type="GObject"/>
      <field cname="priv" name="Priv" type="SoupContentSnifferPrivate*"/>
    </object>
    <struct name="ContentSnifferPrivate" cname="SoupContentSnifferPrivate"/>
    <struct name="Cookie" cname="SoupCookie">
      <field cname="name" name="Name" type="char*"/>
      <field cname="value" name="Value" type="char*"/>
      <field cname="domain" name="Domain" type="char*"/>
      <field cname="path" name="Path" type="char*"/>
      <field cname="expires" name="Expires" type="SoupDate*"/>
      <field cname="secure" name="Secure" type="gboolean"/>
      <field cname="http_only" name="HttpOnly" type="gboolean"/>
      <constructor cname="soup_cookie_new">
        <parameters>
          <parameter name="name" type="const-char*"/>
          <parameter name="value" type="const-char*"/>
          <parameter name="domain" type="const-char*"/>
          <parameter name="path" type="const-char*"/>
          <parameter name="max_age" type="int"/>
        </parameters>
      </constructor>
      <method name="Copy" cname="soup_cookie_copy">
        <return-type type="SoupCookie*"/>
      </method>
      <method name="GetName" cname="soup_cookie_get_name">
        <return-type type="const-char*"/>
      </method>
      <method name="SetName" cname="soup_cookie_set_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-char*"/>
        </parameters>
      </method>
      <method name="GetValue" cname="soup_cookie_get_value">
        <return-type type="const-char*"/>
      </method>
      <method name="SetValue" cname="soup_cookie_set_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="const-char*"/>
        </parameters>
      </method>
      <method name="GetDomain" cname="soup_cookie_get_domain">
        <return-type type="const-char*"/>
      </method>
      <method name="SetDomain" cname="soup_cookie_set_domain">
        <return-type type="void"/>
        <parameters>
          <parameter name="domain" type="const-char*"/>
        </parameters>
      </method>
      <method name="GetPath" cname="soup_cookie_get_path">
        <return-type type="const-char*"/>
      </method>
      <method name="SetPath" cname="soup_cookie_set_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="const-char*"/>
        </parameters>
      </method>
      <method name="SetMaxAge" cname="soup_cookie_set_max_age">
        <return-type type="void"/>
        <parameters>
          <parameter name="max_age" type="int"/>
        </parameters>
      </method>
      <method name="GetExpires" cname="soup_cookie_get_expires">
        <return-type type="SoupDate*"/>
      </method>
      <method name="SetExpires" cname="soup_cookie_set_expires">
        <return-type type="void"/>
        <parameters>
          <parameter name="expires" type="SoupDate*"/>
        </parameters>
      </method>
      <method name="GetSecure" cname="soup_cookie_get_secure">
        <return-type type="gboolean"/>
      </method>
      <method name="SetSecure" cname="soup_cookie_set_secure">
        <return-type type="void"/>
        <parameters>
          <parameter name="secure" type="gboolean"/>
        </parameters>
      </method>
      <method name="GetHttpOnly" cname="soup_cookie_get_http_only">
        <return-type type="gboolean"/>
      </method>
      <method name="SetHttpOnly" cname="soup_cookie_set_http_only">
        <return-type type="void"/>
        <parameters>
          <parameter name="http_only" type="gboolean"/>
        </parameters>
      </method>
      <method name="ToSetCookieHeader" cname="soup_cookie_to_set_cookie_header">
        <return-type type="char*"/>
      </method>
      <method name="ToCookieHeader" cname="soup_cookie_to_cookie_header">
        <return-type type="char*"/>
      </method>
      <method name="AppliesToUri" cname="soup_cookie_applies_to_uri">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="uri" type="SoupURI*"/>
        </parameters>
      </method>
      <method name="Equal" cname="soup_cookie_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="cookie2" type="SoupCookie*"/>
        </parameters>
      </method>
      <method name="Free" cname="soup_cookie_free">
        <return-type type="void"/>
      </method>
      <method name="DomainMatches" cname="soup_cookie_domain_matches">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="host" type="const-char*"/>
        </parameters>
      </method>
    </struct>
    <object name="CookieJar" cname="SoupCookieJar" parent="GObject">
      <method name="GetType" cname="soup_cookie_jar_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="soup_cookie_jar_new"/>
      <virtual_method name="Save" cname="save">
        <return-type type="void"/>
      </virtual_method>
      <method name="Save" cname="soup_cookie_jar_save">
        <return-type type="void"/>
      </method>
      <method name="GetCookies" cname="soup_cookie_jar_get_cookies">
        <return-type type="char*"/>
        <parameters>
          <parameter name="uri" type="SoupURI*"/>
          <parameter name="for_http" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetCookie" cname="soup_cookie_jar_set_cookie">
        <return-type type="void"/>
        <parameters>
          <parameter name="uri" type="SoupURI*"/>
          <parameter name="cookie" type="const-char*"/>
        </parameters>
      </method>
      <method name="SetCookieWithFirstParty" cname="soup_cookie_jar_set_cookie_with_first_party">
        <return-type type="void"/>
        <parameters>
          <parameter name="uri" type="SoupURI*"/>
          <parameter name="first_party" type="SoupURI*"/>
          <parameter name="cookie" type="const-char*"/>
        </parameters>
      </method>
      <method name="AddCookie" cname="soup_cookie_jar_add_cookie">
        <return-type type="void"/>
        <parameters>
          <parameter name="cookie" type="SoupCookie*"/>
        </parameters>
      </method>
      <method name="DeleteCookie" cname="soup_cookie_jar_delete_cookie">
        <return-type type="void"/>
        <parameters>
          <parameter name="cookie" type="SoupCookie*"/>
        </parameters>
      </method>
      <method name="AllCookies" cname="soup_cookie_jar_all_cookies">
        <return-type type="GSList*"/>
      </method>
      <method name="SetAcceptPolicy" cname="soup_cookie_jar_set_accept_policy">
        <return-type type="void"/>
        <parameters>
          <parameter name="policy" type="int"/>
        </parameters>
      </method>
      <method name="GetAcceptPolicy" cname="soup_cookie_jar_get_accept_policy">
        <return-type type="int"/>
      </method>
      <property name="AcceptPolicy" cname="accept-policy" type="SoupCookieJarAcceptPolicy" readable="true" writable="true"/>
      <property name="ReadOnly" cname="read-only" type="gboolean" readable="true" writable="true"/>
      <field cname="parent" name="Parent" type="GObject"/>
      <signal name="Changed" cname="changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="cookiejar" type="SoupCookieJar*"/>
          <parameter name="_object" type="SoupCookie"/>
          <parameter name="p0" type="SoupCookie"/>
        </parameters>
      </signal>
    </object>
    <enum name="CookieJarAcceptPolicy" cname="SoupCookieJarAcceptPolicy">
      <member cname="SOUP_COOKIE_JAR_ACCEPT_ALWAYS" name="Always"/>
      <member cname="SOUP_COOKIE_JAR_ACCEPT_NEVER" name="Never"/>
      <member cname="SOUP_COOKIE_JAR_ACCEPT_NO_THIRD_PARTY" name="NoThirdParty"/>
    </enum>
    <object name="CookieJarText" cname="SoupCookieJarText" parent="SoupCookieJar">
      <method name="GetType" cname="soup_cookie_jar_text_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="soup_cookie_jar_text_new">
        <parameters>
          <parameter name="filename" type="const-char*"/>
          <parameter name="read_only" type="gboolean"/>
        </parameters>
      </constructor>
      <property name="Filename" cname="filename" type="const-gchar*" readable="true" writable="true"/>
      <field cname="parent" name="Parent" type="SoupCookieJar"/>
    </object>
    <struct name="Date" cname="SoupDate">
      <field cname="year" name="Year" type="int"/>
      <field cname="month" name="Month" type="int"/>
      <field cname="day" name="Day" type="int"/>
      <field cname="hour" name="Hour" type="int"/>
      <field cname="minute" name="Minute" type="int"/>
      <field cname="second" name="Second" type="int"/>
      <field cname="utc" name="Utc" type="gboolean"/>
      <field cname="offset" name="Offset" type="int"/>
      <constructor cname="soup_date_new">
        <parameters>
          <parameter name="year" type="int"/>
          <parameter name="month" type="int"/>
          <parameter name="day" type="int"/>
          <parameter name="hour" type="int"/>
          <parameter name="minute" type="int"/>
          <parameter name="second" type="int"/>
        </parameters>
      </constructor>
      <constructor cname="soup_date_new_from_string">
        <parameters>
          <parameter name="date_string" type="const-char*"/>
        </parameters>
      </constructor>
      <constructor cname="soup_date_new_from_time_t">
        <parameters>
          <parameter name="when" type="time_t"/>
        </parameters>
      </constructor>
      <constructor cname="soup_date_new_from_now">
        <parameters>
          <parameter name="offset_seconds" type="int"/>
        </parameters>
      </constructor>
      <method name="ToString" cname="soup_date_to_string">
        <return-type type="char*"/>
        <parameters>
          <parameter name="format" type="int"/>
        </parameters>
      </method>
      <method name="ToTimeT" cname="soup_date_to_time_t">
        <return-type type="time_t"/>
      </method>
      <method name="ToTimeval" cname="soup_date_to_timeval">
        <return-type type="void"/>
        <parameters>
          <parameter name="time" type="GTimeVal*"/>
        </parameters>
      </method>
      <method name="IsPast" cname="soup_date_is_past">
        <return-type type="gboolean"/>
      </method>
      <method name="GetYear" cname="soup_date_get_year">
        <return-type type="int"/>
      </method>
      <method name="GetMonth" cname="soup_date_get_month">
        <return-type type="int"/>
      </method>
      <method name="GetDay" cname="soup_date_get_day">
        <return-type type="int"/>
      </method>
      <method name="GetHour" cname="soup_date_get_hour">
        <return-type type="int"/>
      </method>
      <method name="GetMinute" cname="soup_date_get_minute">
        <return-type type="int"/>
      </method>
      <method name="GetSecond" cname="soup_date_get_second">
        <return-type type="int"/>
      </method>
      <method name="GetUtc" cname="soup_date_get_utc">
        <return-type type="int"/>
      </method>
      <method name="GetOffset" cname="soup_date_get_offset">
        <return-type type="int"/>
      </method>
      <method name="Copy" cname="soup_date_copy">
        <return-type type="SoupDate*"/>
      </method>
      <method name="Free" cname="soup_date_free">
        <return-type type="void"/>
      </method>
    </struct>
    <enum name="DateFormat" cname="SoupDateFormat">
      <member cname="SOUP_DATE_HTTP" name="Http"/>
      <member cname="SOUP_DATE_COOKIE" name="Cookie"/>
      <member cname="SOUP_DATE_RFC2822" name="Rfc2822"/>
      <member cname="SOUP_DATE_ISO8601_COMPACT" name="Iso8601Compact"/>
      <member cname="SOUP_DATE_ISO8601_FULL" name="Iso8601Full"/>
      <member cname="SOUP_DATE_ISO8601" name="Iso8601"/>
      <member cname="SOUP_DATE_ISO8601_XMLRPC" name="Iso8601Xmlrpc"/>
    </enum>
    <enum name="Encoding" cname="SoupEncoding">
      <member cname="SOUP_ENCODING_UNRECOGNIZED" name="Unrecognized"/>
      <member cname="SOUP_ENCODING_NONE" name="None"/>
      <member cname="SOUP_ENCODING_CONTENT_LENGTH" name="ContentLength"/>
      <member cname="SOUP_ENCODING_EOF" name="Eof"/>
      <member cname="SOUP_ENCODING_CHUNKED" name="Chunked"/>
      <member cname="SOUP_ENCODING_BYTERANGES" name="Byteranges"/>
    </enum>
    <enum name="HTTPVersion" cname="SoupHTTPVersion">
      <member cname="SOUP_HTTP_1_0" name="SOUPHTTP10"/>
      <member cname="SOUP_HTTP_1_1" name="SOUPHTTP11"/>
    </enum>
    <enum name="KnownStatusCode" cname="SoupKnownStatusCode">
      <member cname="SOUP_STATUS_NONE" name="None"/>
      <member cname="SOUP_STATUS_CANCELLED" name="Cancelled"/>
      <member cname="SOUP_STATUS_TOO_MANY_REDIRECTS" name="TooManyRedirects"/>
      <member cname="SOUP_STATUS_CONTINUE" name="Continue"/>
      <member cname="SOUP_STATUS_SWITCHING_PROTOCOLS" name="SwitchingProtocols"/>
      <member cname="SOUP_STATUS_PROCESSING" name="Processing"/>
      <member cname="SOUP_STATUS_CANT_RESOLVE" name="CantResolve"/>
      <member cname="SOUP_STATUS_OK" name="Ok"/>
      <member cname="SOUP_STATUS_CREATED" name="Created"/>
      <member cname="SOUP_STATUS_ACCEPTED" name="Accepted"/>
      <member cname="SOUP_STATUS_NON_AUTHORITATIVE" name="NonAuthoritative"/>
      <member cname="SOUP_STATUS_NO_CONTENT" name="NoContent"/>
      <member cname="SOUP_STATUS_RESET_CONTENT" name="ResetContent"/>
      <member cname="SOUP_STATUS_PARTIAL_CONTENT" name="PartialContent"/>
      <member cname="SOUP_STATUS_MULTI_STATUS" name="MultiStatus"/>
      <member cname="SOUP_STATUS_CANT_RESOLVE_PROXY" name="CantResolveProxy"/>
      <member cname="SOUP_STATUS_MULTIPLE_CHOICES" name="MultipleChoices"/>
      <member cname="SOUP_STATUS_MOVED_PERMANENTLY" name="MovedPermanently"/>
      <member cname="SOUP_STATUS_FOUND" name="Found"/>
      <member cname="SOUP_STATUS_MOVED_TEMPORARILY" name="MovedTemporarily"/>
      <member cname="SOUP_STATUS_SEE_OTHER" name="SeeOther"/>
      <member cname="SOUP_STATUS_NOT_MODIFIED" name="NotModified"/>
      <member cname="SOUP_STATUS_USE_PROXY" name="UseProxy"/>
      <member cname="SOUP_STATUS_NOT_APPEARING_IN_THIS_PROTOCOL" name="NotAppearingInThisProtocol"/>
      <member cname="SOUP_STATUS_TEMPORARY_REDIRECT" name="TemporaryRedirect"/>
      <member cname="SOUP_STATUS_CANT_CONNECT" name="CantConnect"/>
      <member cname="SOUP_STATUS_BAD_REQUEST" name="BadRequest"/>
      <member cname="SOUP_STATUS_UNAUTHORIZED" name="Unauthorized"/>
      <member cname="SOUP_STATUS_PAYMENT_REQUIRED" name="PaymentRequired"/>
      <member cname="SOUP_STATUS_FORBIDDEN" name="Forbidden"/>
      <member cname="SOUP_STATUS_NOT_FOUND" name="NotFound"/>
      <member cname="SOUP_STATUS_METHOD_NOT_ALLOWED" name="MethodNotAllowed"/>
      <member cname="SOUP_STATUS_NOT_ACCEPTABLE" name="NotAcceptable"/>
      <member cname="SOUP_STATUS_PROXY_AUTHENTICATION_REQUIRED" name="ProxyAuthenticationRequired"/>
      <member cname="SOUP_STATUS_PROXY_UNAUTHORIZED" name="ProxyUnauthorized"/>
      <member cname="SOUP_STATUS_REQUEST_TIMEOUT" name="RequestTimeout"/>
      <member cname="SOUP_STATUS_CONFLICT" name="Conflict"/>
      <member cname="SOUP_STATUS_GONE" name="Gone"/>
      <member cname="SOUP_STATUS_LENGTH_REQUIRED" name="LengthRequired"/>
      <member cname="SOUP_STATUS_PRECONDITION_FAILED" name="PreconditionFailed"/>
      <member cname="SOUP_STATUS_REQUEST_ENTITY_TOO_LARGE" name="RequestEntityTooLarge"/>
      <member cname="SOUP_STATUS_REQUEST_URI_TOO_LONG" name="RequestUriTooLong"/>
      <member cname="SOUP_STATUS_UNSUPPORTED_MEDIA_TYPE" name="UnsupportedMediaType"/>
      <member cname="SOUP_STATUS_REQUESTED_RANGE_NOT_SATISFIABLE" name="RequestedRangeNotSatisfiable"/>
      <member cname="SOUP_STATUS_INVALID_RANGE" name="InvalidRange"/>
      <member cname="SOUP_STATUS_EXPECTATION_FAILED" name="ExpectationFailed"/>
      <member cname="SOUP_STATUS_UNPROCESSABLE_ENTITY" name="UnprocessableEntity"/>
      <member cname="SOUP_STATUS_LOCKED" name="Locked"/>
      <member cname="SOUP_STATUS_FAILED_DEPENDENCY" name="FailedDependency"/>
      <member cname="SOUP_STATUS_CANT_CONNECT_PROXY" name="CantConnectProxy"/>
      <member cname="SOUP_STATUS_INTERNAL_SERVER_ERROR" name="InternalServerError"/>
      <member cname="SOUP_STATUS_NOT_IMPLEMENTED" name="NotImplemented"/>
      <member cname="SOUP_STATUS_BAD_GATEWAY" name="BadGateway"/>
      <member cname="SOUP_STATUS_SERVICE_UNAVAILABLE" name="ServiceUnavailable"/>
      <member cname="SOUP_STATUS_GATEWAY_TIMEOUT" name="GatewayTimeout"/>
      <member cname="SOUP_STATUS_HTTP_VERSION_NOT_SUPPORTED" name="HttpVersionNotSupported"/>
      <member cname="SOUP_STATUS_INSUFFICIENT_STORAGE" name="InsufficientStorage"/>
      <member cname="SOUP_STATUS_NOT_EXTENDED" name="NotExtended"/>
      <member cname="SOUP_STATUS_SSL_FAILED" name="SslFailed"/>
      <member cname="SOUP_STATUS_IO_ERROR" name="IoError"/>
      <member cname="SOUP_STATUS_MALFORMED" name="Malformed"/>
      <member cname="SOUP_STATUS_TRY_AGAIN" name="TryAgain"/>
    </enum>
    <object name="Logger" cname="SoupLogger" parent="GObject">
      <method name="GetType" cname="soup_logger_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="soup_logger_new">
        <parameters>
          <parameter name="level" type="int"/>
          <parameter name="max_body_size" type="int"/>
        </parameters>
      </constructor>
      <method name="Attach" cname="soup_logger_attach">
        <return-type type="void"/>
        <parameters>
          <parameter name="session" type="SoupSession*"/>
        </parameters>
      </method>
      <method name="Detach" cname="soup_logger_detach">
        <return-type type="void"/>
        <parameters>
          <parameter name="session" type="SoupSession*"/>
        </parameters>
      </method>
      <method name="SetRequestFilter" cname="soup_logger_set_request_filter">
        <return-type type="void"/>
        <parameters>
          <parameter name="request_filter" type="SoupLoggerFilter"/>
          <parameter name="filter_data" type="gpointer"/>
          <parameter name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetResponseFilter" cname="soup_logger_set_response_filter">
        <return-type type="void"/>
        <parameters>
          <parameter name="response_filter" type="SoupLoggerFilter"/>
          <parameter name="filter_data" type="gpointer"/>
          <parameter name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetPrinter" cname="soup_logger_set_printer">
        <return-type type="void"/>
        <parameters>
          <parameter name="printer" type="SoupLoggerPrinter"/>
          <parameter name="printer_data" type="gpointer"/>
          <parameter name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <field cname="parent" name="Parent" type="GObject"/>
    </object>
    <callback name="LoggerFilter" cname="SoupLoggerFilter">
      <return-type type="int"/>
      <parameters>
        <parameter name="logger" type="SoupLogger*"/>
        <parameter name="msg" type="SoupMessage*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <enum name="LoggerLogLevel" cname="SoupLoggerLogLevel">
      <member cname="SOUP_LOGGER_LOG_NONE" name="None"/>
      <member cname="SOUP_LOGGER_LOG_MINIMAL" name="Minimal"/>
      <member cname="SOUP_LOGGER_LOG_HEADERS" name="Headers"/>
      <member cname="SOUP_LOGGER_LOG_BODY" name="Body"/>
    </enum>
    <callback name="LoggerPrinter" cname="SoupLoggerPrinter">
      <return-type type="void"/>
      <parameters>
        <parameter name="logger" type="SoupLogger*"/>
        <parameter name="level" type="int"/>
        <parameter name="direction" type="char"/>
        <parameter name="data" type="const-char*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <enum name="MemoryUse" cname="SoupMemoryUse">
      <member cname="SOUP_MEMORY_STATIC" name="Static"/>
      <member cname="SOUP_MEMORY_TAKE" name="Take"/>
      <member cname="SOUP_MEMORY_COPY" name="Copy"/>
      <member cname="SOUP_MEMORY_TEMPORARY" name="Temporary"/>
    </enum>
    <object name="Message" cname="SoupMessage" parent="GObject">
      <method name="GetType" cname="soup_message_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="soup_message_new">
        <parameters>
          <parameter name="method" type="const-char*"/>
          <parameter name="uri_string" type="const-char*"/>
        </parameters>
      </constructor>
      <constructor cname="soup_message_new_from_uri">
        <parameters>
          <parameter name="method" type="const-char*"/>
          <parameter name="uri" type="SoupURI*"/>
        </parameters>
      </constructor>
      <method name="SetRequest" cname="soup_message_set_request">
        <return-type type="void"/>
        <parameters>
          <parameter name="content_type" type="const-char*"/>
          <parameter name="req_use" type="int"/>
          <parameter name="req_body" type="const-char*"/>
          <parameter name="req_length" type="gsize"/>
        </parameters>
      </method>
      <method name="SetResponse" cname="soup_message_set_response">
        <return-type type="void"/>
        <parameters>
          <parameter name="content_type" type="const-char*"/>
          <parameter name="resp_use" type="int"/>
          <parameter name="resp_body" type="const-char*" array_len="4"/>
          <parameter name="resp_length" type="gsize"/>
        </parameters>
      </method>
      <method name="SetHttpVersion" cname="soup_message_set_http_version">
        <return-type type="void"/>
        <parameters>
          <parameter name="version" type="int"/>
        </parameters>
      </method>
      <method name="GetHttpVersion" cname="soup_message_get_http_version">
        <return-type type="int"/>
      </method>
      <method name="IsKeepalive" cname="soup_message_is_keepalive">
        <return-type type="gboolean"/>
      </method>
      <method name="GetUri" cname="soup_message_get_uri">
        <return-type type="SoupURI*"/>
      </method>
      <method name="SetUri" cname="soup_message_set_uri">
        <return-type type="void"/>
        <parameters>
          <parameter name="uri" type="SoupURI*"/>
        </parameters>
      </method>
      <method name="GetAddress" cname="soup_message_get_address">
        <return-type type="SoupAddress*"/>
      </method>
      <method name="GetFirstParty" cname="soup_message_get_first_party">
        <return-type type="SoupURI*"/>
      </method>
      <method name="SetFirstParty" cname="soup_message_set_first_party">
        <return-type type="void"/>
        <parameters>
          <parameter name="first_party" type="SoupURI*"/>
        </parameters>
      </method>
      <method name="SetFlags" cname="soup_message_set_flags">
        <return-type type="void"/>
        <parameters>
          <parameter name="flags" type="SoupMessageFlags"/>
        </parameters>
      </method>
      <method name="GetFlags" cname="soup_message_get_flags">
        <return-type type="SoupMessageFlags"/>
      </method>
      <method name="AddHeaderHandler" cname="soup_message_add_header_handler">
        <return-type type="guint"/>
        <parameters>
          <parameter name="signal" type="const-char*"/>
          <parameter name="header" type="const-char*"/>
          <parameter name="callback" type="GCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="AddStatusCodeHandler" cname="soup_message_add_status_code_handler">
        <return-type type="guint"/>
        <parameters>
          <parameter name="signal" type="const-char*"/>
          <parameter name="status_code" type="guint"/>
          <parameter name="callback" type="GCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="SetStatus" cname="soup_message_set_status">
        <return-type type="void"/>
        <parameters>
          <parameter name="status_code" type="guint"/>
        </parameters>
      </method>
      <method name="SetStatusFull" cname="soup_message_set_status_full">
        <return-type type="void"/>
        <parameters>
          <parameter name="status_code" type="guint"/>
          <parameter name="reason_phrase" type="const-char*"/>
        </parameters>
      </method>
      <method name="SetChunkAllocator" cname="soup_message_set_chunk_allocator">
        <return-type type="void"/>
        <parameters>
          <parameter name="allocator" type="SoupChunkAllocator"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="destroy_notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="DisableFeature" cname="soup_message_disable_feature">
        <return-type type="void"/>
        <parameters>
          <parameter name="feature_type" type="GType"/>
        </parameters>
      </method>
      <method name="WroteInformational" cname="soup_message_wrote_informational">
        <return-type type="void"/>
      </method>
      <method name="WroteHeaders" cname="soup_message_wrote_headers">
        <return-type type="void"/>
      </method>
      <method name="WroteChunk" cname="soup_message_wrote_chunk">
        <return-type type="void"/>
      </method>
      <method name="WroteBodyData" cname="soup_message_wrote_body_data">
        <return-type type="void"/>
        <parameters>
          <parameter name="chunk" type="SoupBuffer*"/>
        </parameters>
      </method>
      <method name="WroteBody" cname="soup_message_wrote_body">
        <return-type type="void"/>
      </method>
      <method name="GotInformational" cname="soup_message_got_informational">
        <return-type type="void"/>
      </method>
      <method name="GotHeaders" cname="soup_message_got_headers">
        <return-type type="void"/>
      </method>
      <method name="GotChunk" cname="soup_message_got_chunk">
        <return-type type="void"/>
        <parameters>
          <parameter name="chunk" type="SoupBuffer*"/>
        </parameters>
      </method>
      <method name="GotBody" cname="soup_message_got_body">
        <return-type type="void"/>
      </method>
      <method name="ContentSniffed" cname="soup_message_content_sniffed">
        <return-type type="void"/>
        <parameters>
          <parameter name="content_type" type="const-char*"/>
          <parameter name="params" type="GHashTable*"/>
        </parameters>
      </method>
      <method name="Restarted" cname="soup_message_restarted">
        <return-type type="void"/>
      </method>
      <method name="Finished" cname="soup_message_finished">
        <return-type type="void"/>
      </method>
      <property name="FirstParty" cname="first-party" type="SoupURI*" readable="true" writable="true"/>
      <property name="Flags" cname="flags" type="SoupMessageFlags" readable="true" writable="true"/>
      <property name="HttpVersion" cname="http-version" type="SoupHTTPVersion" readable="true" writable="true"/>
      <property name="Method" cname="method" type="const-gchar*" readable="true" writable="true"/>
      <property name="ReasonPhrase" cname="reason-phrase" type="const-gchar*" readable="true" writable="true"/>
      <property name="RequestBody" cname="request-body" type="SoupMessageBody*" readable="true" writable="false"/>
      <property name="RequestHeaders" cname="request-headers" type="SoupMessageHeaders*" readable="true" writable="false"/>
      <property name="ResponseBody" cname="response-body" type="SoupMessageBody*" readable="true" writable="false"/>
      <property name="ResponseHeaders" cname="response-headers" type="SoupMessageHeaders*" readable="true" writable="false"/>
      <property name="ServerSide" cname="server-side" type="gboolean" readable="true" writable="true"/>
      <property name="StatusCode" cname="status-code" type="guint" readable="true" writable="true"/>
      <property name="Uri" cname="uri" type="SoupURI*" readable="true" writable="true"/>
      <field cname="parent" name="Parent" type="GObject"/>
    </object>
    <struct name="MessageBody" cname="SoupMessageBody">
      <field cname="data" name="Data" type="char*"/>
      <field cname="length" name="Length" type="goffset"/>
      <constructor cname="soup_message_body_new"/>
      <method name="SetAccumulate" cname="soup_message_body_set_accumulate">
        <return-type type="void"/>
        <parameters>
          <parameter name="accumulate" type="gboolean"/>
        </parameters>
      </method>
      <method name="GetAccumulate" cname="soup_message_body_get_accumulate">
        <return-type type="gboolean"/>
      </method>
      <method name="Append" cname="soup_message_body_append_take">
        <return-type type="void"/>
        <parameters>
          <parameter name="data" type="guchar*" array_len="2"/>
          <parameter name="length" type="gsize"/>
        </parameters>
      </method>
      <method name="AppendBuffer" cname="soup_message_body_append_buffer">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffer" type="SoupBuffer*"/>
        </parameters>
      </method>
      <method name="Truncate" cname="soup_message_body_truncate">
        <return-type type="void"/>
      </method>
      <method name="Complete" cname="soup_message_body_complete">
        <return-type type="void"/>
      </method>
      <method name="Flatten" cname="soup_message_body_flatten">
        <return-type type="SoupBuffer*"/>
      </method>
      <method name="GetChunk" cname="soup_message_body_get_chunk">
        <return-type type="SoupBuffer*"/>
        <parameters>
          <parameter name="offset" type="goffset"/>
        </parameters>
      </method>
      <method name="GotChunk" cname="soup_message_body_got_chunk">
        <return-type type="void"/>
        <parameters>
          <parameter name="chunk" type="SoupBuffer*"/>
        </parameters>
      </method>
      <method name="WroteChunk" cname="soup_message_body_wrote_chunk">
        <return-type type="void"/>
        <parameters>
          <parameter name="chunk" type="SoupBuffer*"/>
        </parameters>
      </method>
      <method name="Free" cname="soup_message_body_free">
        <return-type type="void"/>
      </method>
    </struct>
    <struct name="MessageHeaders" cname="SoupMessageHeaders">
      <constructor cname="soup_message_headers_new">
        <parameters>
          <parameter name="type" type="int"/>
        </parameters>
      </constructor>
      <method name="Free" cname="soup_message_headers_free">
        <return-type type="void"/>
      </method>
      <method name="Append" cname="soup_message_headers_append">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-char*"/>
          <parameter name="value" type="const-char*"/>
        </parameters>
      </method>
      <method name="Replace" cname="soup_message_headers_replace">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-char*"/>
          <parameter name="value" type="const-char*"/>
        </parameters>
      </method>
      <method name="Remove" cname="soup_message_headers_remove">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-char*"/>
        </parameters>
      </method>
      <method name="Clear" cname="soup_message_headers_clear">
        <return-type type="void"/>
      </method>
      <method name="Get" cname="soup_message_headers_get">
        <return-type type="const-char*"/>
        <parameters>
          <parameter name="name" type="const-char*"/>
        </parameters>
      </method>
      <method name="GetOne" cname="soup_message_headers_get_one">
        <return-type type="const-char*"/>
        <parameters>
          <parameter name="name" type="const-char*"/>
        </parameters>
      </method>
      <method name="GetList" cname="soup_message_headers_get_list">
        <return-type type="const-char*"/>
        <parameters>
          <parameter name="name" type="const-char*"/>
        </parameters>
      </method>
      <method name="Foreach" cname="soup_message_headers_foreach">
        <return-type type="void"/>
        <parameters>
          <parameter name="func" type="SoupMessageHeadersForeachFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="GetEncoding" cname="soup_message_headers_get_encoding">
        <return-type type="int"/>
      </method>
      <method name="SetEncoding" cname="soup_message_headers_set_encoding">
        <return-type type="void"/>
        <parameters>
          <parameter name="encoding" type="int"/>
        </parameters>
      </method>
      <method name="GetContentLength" cname="soup_message_headers_get_content_length">
        <return-type type="goffset"/>
      </method>
      <method name="SetContentLength" cname="soup_message_headers_set_content_length">
        <return-type type="void"/>
        <parameters>
          <parameter name="content_length" type="goffset"/>
        </parameters>
      </method>
      <method name="GetExpectations" cname="soup_message_headers_get_expectations">
        <return-type type="SoupExpectation"/>
      </method>
      <method name="SetExpectations" cname="soup_message_headers_set_expectations">
        <return-type type="void"/>
        <parameters>
          <parameter name="expectations" type="SoupExpectation"/>
        </parameters>
      </method>
      <method name="GetRanges" cname="soup_message_headers_get_ranges">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="total_length" type="goffset"/>
          <parameter name="ranges" type="SoupRange**"/>
          <parameter name="length" type="int*"/>
        </parameters>
      </method>
      <method name="FreeRanges" cname="soup_message_headers_free_ranges">
        <return-type type="void"/>
        <parameters>
          <parameter name="ranges" type="SoupRange*"/>
        </parameters>
      </method>
      <method name="SetRanges" cname="soup_message_headers_set_ranges">
        <return-type type="void"/>
        <parameters>
          <parameter name="ranges" type="SoupRange*"/>
          <parameter name="length" type="int"/>
        </parameters>
      </method>
      <method name="SetRange" cname="soup_message_headers_set_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="start" type="goffset"/>
          <parameter name="end" type="goffset"/>
        </parameters>
      </method>
      <method name="GetContentRange" cname="soup_message_headers_get_content_range">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="start" type="goffset*"/>
          <parameter name="end" type="goffset*"/>
          <parameter name="total_length" type="goffset*"/>
        </parameters>
      </method>
      <method name="SetContentRange" cname="soup_message_headers_set_content_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="start" type="goffset"/>
          <parameter name="end" type="goffset"/>
          <parameter name="total_length" type="goffset"/>
        </parameters>
      </method>
      <method name="GetContentType" cname="soup_message_headers_get_content_type">
        <return-type type="const-char*"/>
        <parameters>
          <parameter name="params" type="GHashTable**"/>
        </parameters>
      </method>
      <method name="SetContentType" cname="soup_message_headers_set_content_type">
        <return-type type="void"/>
        <parameters>
          <parameter name="content_type" type="const-char*"/>
          <parameter name="params" type="GHashTable*"/>
        </parameters>
      </method>
      <method name="GetContentDisposition" cname="soup_message_headers_get_content_disposition">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="disposition" type="char**" array_len=""/>
          <parameter name="params" type="GHashTable**"/>
        </parameters>
      </method>
      <method name="SetContentDisposition" cname="soup_message_headers_set_content_disposition">
        <return-type type="void"/>
        <parameters>
          <parameter name="disposition" type="const-char*"/>
          <parameter name="params" type="GHashTable*"/>
        </parameters>
      </method>
    </struct>
    <callback name="MessageHeadersForeachFunc" cname="SoupMessageHeadersForeachFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="name" type="const-char*"/>
        <parameter name="value" type="const-char*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <struct name="MessageHeadersIter" cname="SoupMessageHeadersIter">
      <field cname="dummy" name="Dummy" type="gpointer" array_len=""/>
      <method name="Init" cname="soup_message_headers_iter_init">
        <return-type type="void"/>
        <parameters>
          <parameter name="hdrs" type="SoupMessageHeaders*"/>
        </parameters>
      </method>
      <method name="Next" cname="soup_message_headers_iter_next">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="char**"/>
          <parameter name="value" type="char**"/>
        </parameters>
      </method>
    </struct>
    <enum name="MessageHeadersType" cname="SoupMessageHeadersType">
      <member cname="SOUP_MESSAGE_HEADERS_REQUEST" name="Request"/>
      <member cname="SOUP_MESSAGE_HEADERS_RESPONSE" name="Response"/>
      <member cname="SOUP_MESSAGE_HEADERS_MULTIPART" name="Multipart"/>
    </enum>
    <struct name="MessageQueue" cname="SoupMessageQueue"/>
    <struct name="MessageQueueItem" cname="SoupMessageQueueItem"/>
    <struct name="Multipart" cname="SoupMultipart">
      <constructor cname="soup_multipart_new">
        <parameters>
          <parameter name="mime_type" type="const-char*"/>
        </parameters>
      </constructor>
      <constructor cname="soup_multipart_new_from_message">
        <parameters>
          <parameter name="headers" type="SoupMessageHeaders*"/>
          <parameter name="body" type="SoupMessageBody*"/>
        </parameters>
      </constructor>
      <method name="GetLength" cname="soup_multipart_get_length">
        <return-type type="int"/>
      </method>
      <method name="GetPart" cname="soup_multipart_get_part">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="part" type="int"/>
          <parameter name="headers" type="SoupMessageHeaders**"/>
          <parameter name="body" type="SoupBuffer**"/>
        </parameters>
      </method>
      <method name="AppendPart" cname="soup_multipart_append_part">
        <return-type type="void"/>
        <parameters>
          <parameter name="headers" type="SoupMessageHeaders*"/>
          <parameter name="body" type="SoupBuffer*"/>
        </parameters>
      </method>
      <method name="AppendFormString" cname="soup_multipart_append_form_string">
        <return-type type="void"/>
        <parameters>
          <parameter name="control_name" type="const-char*"/>
          <parameter name="data" type="const-char*"/>
        </parameters>
      </method>
      <method name="AppendFormFile" cname="soup_multipart_append_form_file">
        <return-type type="void"/>
        <parameters>
          <parameter name="control_name" type="const-char*"/>
          <parameter name="filename" type="const-char*"/>
          <parameter name="content_type" type="const-char*"/>
          <parameter name="body" type="SoupBuffer*"/>
        </parameters>
      </method>
      <method name="ToMessage" cname="soup_multipart_to_message">
        <return-type type="void"/>
        <parameters>
          <parameter name="dest_headers" type="SoupMessageHeaders*"/>
          <parameter name="dest_body" type="SoupMessageBody*"/>
        </parameters>
      </method>
      <method name="Free" cname="soup_multipart_free">
        <return-type type="void"/>
      </method>
    </struct>
    <callback name="ProxyResolverCallback" cname="SoupProxyResolverCallback">
      <return-type type="void"/>
      <parameters>
        <parameter type="SoupProxyResolver*"/>
        <parameter type="SoupMessage*"/>
        <parameter type="guint"/>
        <parameter type="SoupAddress*"/>
        <parameter type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ProxyURIResolverCallback" cname="SoupProxyURIResolverCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="resolver" type="SoupProxyURIResolver*"/>
        <parameter name="status" type="guint"/>
        <parameter name="proxy_uri" type="SoupURI*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <struct name="Range" cname="SoupRange">
      <field cname="start" name="Start" type="goffset"/>
      <field cname="end" name="End" type="goffset"/>
    </struct>
    <enum name="SSLError" cname="SoupSSLError">
      <member cname="SOUP_SSL_ERROR_HANDSHAKE_NEEDS_READ" name="HandshakeNeedsRead"/>
      <member cname="SOUP_SSL_ERROR_HANDSHAKE_NEEDS_WRITE" name="HandshakeNeedsWrite"/>
      <member cname="SOUP_SSL_ERROR_CERTIFICATE" name="Certificate"/>
      <member cname="SOUP_SSL_ERROR_HANDSHAKE_FAILED" name="HandshakeFailed"/>
    </enum>
    <object name="Server" cname="SoupServer" parent="GObject">
      <method name="GetType" cname="soup_server_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="soup_server_new">
        <parameters>
          <parameter name="optname1" type="const-char*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </constructor>
      <method name="IsHttps" cname="soup_server_is_https">
        <return-type type="gboolean"/>
      </method>
      <method name="GetPort" cname="soup_server_get_port">
        <return-type type="guint"/>
      </method>
      <method name="GetListener" cname="soup_server_get_listener">
        <return-type type="SoupSocket*"/>
      </method>
      <method name="Run" cname="soup_server_run">
        <return-type type="void"/>
      </method>
      <method name="RunAsync" cname="soup_server_run_async">
        <return-type type="void"/>
      </method>
      <method name="Quit" cname="soup_server_quit">
        <return-type type="void"/>
      </method>
      <method name="GetAsyncContext" cname="soup_server_get_async_context">
        <return-type type="GMainContext*"/>
      </method>
      <method name="AddHandler" cname="soup_server_add_handler">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="const-char*"/>
          <parameter name="callback" type="SoupServerCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="RemoveHandler" cname="soup_server_remove_handler">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="const-char*"/>
        </parameters>
      </method>
      <method name="AddAuthDomain" cname="soup_server_add_auth_domain">
        <return-type type="void"/>
        <parameters>
          <parameter name="auth_domain" type="SoupAuthDomain*"/>
        </parameters>
      </method>
      <method name="RemoveAuthDomain" cname="soup_server_remove_auth_domain">
        <return-type type="void"/>
        <parameters>
          <parameter name="auth_domain" type="SoupAuthDomain*"/>
        </parameters>
      </method>
      <method name="PauseMessage" cname="soup_server_pause_message">
        <return-type type="void"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
        </parameters>
      </method>
      <method name="UnpauseMessage" cname="soup_server_unpause_message">
        <return-type type="void"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
        </parameters>
      </method>
      <property name="AsyncContext" cname="async-context" type="gpointer" readable="true" writable="true"/>
      <property name="Interface" cname="interface" type="SoupAddress*" readable="true" writable="true"/>
      <property name="Port" cname="port" type="guint" readable="true" writable="true"/>
      <property name="RawPaths" cname="raw-paths" type="gboolean" readable="true" writable="true"/>
      <property name="ServerHeader" cname="server-header" type="const-gchar*" readable="true" writable="true"/>
      <property name="SslCertFile" cname="ssl-cert-file" type="const-gchar*" readable="true" writable="true"/>
      <property name="SslKeyFile" cname="ssl-key-file" type="const-gchar*" readable="true" writable="true"/>
      <field cname="parent" name="Parent" type="GObject"/>
      <signal name="RequestAborted" cname="request-aborted">
        <return-type type="void"/>
        <parameters>
          <parameter name="server" type="SoupServer*"/>
          <parameter name="_object" type="SoupMessage"/>
          <parameter name="p0" type="SoupClientContext"/>
        </parameters>
      </signal>
      <signal name="RequestFinished" cname="request-finished">
        <return-type type="void"/>
        <parameters>
          <parameter name="server" type="SoupServer*"/>
          <parameter name="_object" type="SoupMessage"/>
          <parameter name="p0" type="SoupClientContext"/>
        </parameters>
      </signal>
      <signal name="RequestRead" cname="request-read">
        <return-type type="void"/>
        <parameters>
          <parameter name="server" type="SoupServer*"/>
          <parameter name="_object" type="SoupMessage"/>
          <parameter name="p0" type="SoupClientContext"/>
        </parameters>
      </signal>
      <signal name="RequestStarted" cname="request-started">
        <return-type type="void"/>
        <parameters>
          <parameter name="server" type="SoupServer*"/>
          <parameter name="_object" type="SoupMessage"/>
          <parameter name="p0" type="SoupClientContext"/>
        </parameters>
      </signal>
    </object>
    <callback name="ServerCallback" cname="SoupServerCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="server" type="SoupServer*"/>
        <parameter name="msg" type="SoupMessage*"/>
        <parameter name="path" type="const-char*"/>
        <parameter name="query" type="GHashTable*"/>
        <parameter name="client" type="SoupClientContext*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <object name="Session" cname="SoupSession" parent="GObject">
      <method name="GetType" cname="soup_session_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="QueueMessage" cname="queue_message">
        <return-type type="void"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
          <parameter name="callback" type="SoupSessionCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RequeueMessage" cname="requeue_message">
        <return-type type="void"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SendMessage" cname="send_message">
        <return-type type="guint"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="CancelMessage" cname="cancel_message">
        <return-type type="void"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
          <parameter name="status_code" type="guint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="AuthRequired" cname="auth_required">
        <return-type type="void"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
          <parameter name="auth" type="SoupAuth*"/>
          <parameter name="retrying" type="gboolean"/>
        </parameters>
      </virtual_method>
      <method name="GetAsyncContext" cname="soup_session_get_async_context">
        <return-type type="GMainContext*"/>
      </method>
      <method name="QueueMessage" cname="soup_session_queue_message">
        <return-type type="void"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
          <parameter name="callback" type="SoupSessionCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="RequeueMessage" cname="soup_session_requeue_message">
        <return-type type="void"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
        </parameters>
      </method>
      <method name="SendMessage" cname="soup_session_send_message">
        <return-type type="guint"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
        </parameters>
      </method>
      <method name="PauseMessage" cname="soup_session_pause_message">
        <return-type type="void"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
        </parameters>
      </method>
      <method name="UnpauseMessage" cname="soup_session_unpause_message">
        <return-type type="void"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
        </parameters>
      </method>
      <method name="CancelMessage" cname="soup_session_cancel_message">
        <return-type type="void"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
          <parameter name="status_code" type="guint"/>
        </parameters>
      </method>
      <method name="Abort" cname="soup_session_abort">
        <return-type type="void"/>
      </method>
      <method name="PrepareForUri" cname="soup_session_prepare_for_uri">
        <return-type type="void"/>
        <parameters>
          <parameter name="uri" type="SoupURI*"/>
        </parameters>
      </method>
      <method name="AddFeature" cname="soup_session_add_feature">
        <return-type type="void"/>
        <parameters>
          <parameter name="feature" type="SoupSessionFeature*"/>
        </parameters>
      </method>
      <method name="AddFeatureByType" cname="soup_session_add_feature_by_type">
        <return-type type="void"/>
        <parameters>
          <parameter name="feature_type" type="GType"/>
        </parameters>
      </method>
      <method name="RemoveFeature" cname="soup_session_remove_feature">
        <return-type type="void"/>
        <parameters>
          <parameter name="feature" type="SoupSessionFeature*"/>
        </parameters>
      </method>
      <method name="RemoveFeatureByType" cname="soup_session_remove_feature_by_type">
        <return-type type="void"/>
        <parameters>
          <parameter name="feature_type" type="GType"/>
        </parameters>
      </method>
      <method name="GetFeatures" cname="soup_session_get_features">
        <return-type type="GSList*"/>
        <parameters>
          <parameter name="feature_type" type="GType"/>
        </parameters>
      </method>
      <method name="GetFeature" cname="soup_session_get_feature">
        <return-type type="SoupSessionFeature*"/>
        <parameters>
          <parameter name="feature_type" type="GType"/>
        </parameters>
      </method>
      <method name="GetFeatureForMessage" cname="soup_session_get_feature_for_message">
        <return-type type="SoupSessionFeature*"/>
        <parameters>
          <parameter name="feature_type" type="GType"/>
          <parameter name="msg" type="SoupMessage*"/>
        </parameters>
      </method>
      <property name="AcceptLanguage" cname="accept-language" type="const-gchar*" readable="true" writable="true"/>
      <property name="AcceptLanguageAuto" cname="accept-language-auto" type="gboolean" readable="true" writable="true"/>
      <property name="AsyncContext" cname="async-context" type="gpointer" readable="true" writable="true"/>
      <property name="IdleTimeout" cname="idle-timeout" type="guint" readable="true" writable="true"/>
      <property name="MaxConns" cname="max-conns" type="gint" readable="true" writable="true"/>
      <property name="MaxConnsPerHost" cname="max-conns-per-host" type="gint" readable="true" writable="true"/>
      <property name="ProxyUri" cname="proxy-uri" type="SoupURI*" readable="true" writable="true"/>
      <property name="SslCaFile" cname="ssl-ca-file" type="const-gchar*" readable="true" writable="true"/>
      <property name="SslStrict" cname="ssl-strict" type="gboolean" readable="true" writable="true"/>
      <property name="Timeout" cname="timeout" type="guint" readable="true" writable="true"/>
      <property name="UseNtlm" cname="use-ntlm" type="gboolean" readable="true" writable="true"/>
      <property name="UserAgent" cname="user-agent" type="const-gchar*" readable="true" writable="true"/>
      <field cname="parent" name="Parent" type="GObject"/>
      <signal name="Authenticate" cname="authenticate">
        <return-type type="void"/>
        <parameters>
          <parameter name="session" type="SoupSession*"/>
          <parameter name="_object" type="SoupMessage"/>
          <parameter name="p0" type="SoupAuth"/>
          <parameter name="p1" type="gboolean"/>
        </parameters>
      </signal>
      <signal name="ConnectionCreated" cname="connection-created">
        <return-type type="void"/>
        <parameters>
          <parameter name="session" type="SoupSession*"/>
          <parameter name="_object" type="GObject"/>
        </parameters>
      </signal>
      <signal name="RequestQueued" cname="request-queued">
        <return-type type="void"/>
        <parameters>
          <parameter name="session" type="SoupSession*"/>
          <parameter name="_object" type="SoupMessage"/>
        </parameters>
      </signal>
      <signal name="RequestStarted" cname="request-started">
        <return-type type="void"/>
        <parameters>
          <parameter name="session" type="SoupSession*"/>
          <parameter name="_object" type="SoupMessage"/>
          <parameter name="p0" type="SoupSocket"/>
        </parameters>
      </signal>
      <signal name="RequestUnqueued" cname="request-unqueued">
        <return-type type="void"/>
        <parameters>
          <parameter name="session" type="SoupSession*"/>
          <parameter name="_object" type="SoupMessage"/>
        </parameters>
      </signal>
      <signal name="Tunneling" cname="tunneling">
        <return-type type="void"/>
        <parameters>
          <parameter name="session" type="SoupSession*"/>
          <parameter name="_object" type="GObject"/>
        </parameters>
      </signal>
    </object>
    <object name="SessionAsync" cname="SoupSessionAsync" parent="SoupSession">
      <method name="GetType" cname="soup_session_async_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="soup_session_async_new"/>
      <constructor cname="soup_session_async_new_with_options">
        <parameters>
          <parameter name="optname1" type="const-char*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </constructor>
      <field cname="parent" name="Parent" type="SoupSession"/>
    </object>
    <callback name="SessionCallback" cname="SoupSessionCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="session" type="SoupSession*"/>
        <parameter name="msg" type="SoupMessage*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <object name="SessionSync" cname="SoupSessionSync" parent="SoupSession">
      <method name="GetType" cname="soup_session_sync_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="soup_session_sync_new"/>
      <constructor cname="soup_session_sync_new_with_options">
        <parameters>
          <parameter name="optname1" type="const-char*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </constructor>
      <field cname="parent" name="Parent" type="SoupSession"/>
    </object>
    <object name="Socket" cname="SoupSocket" parent="GObject">
      <method name="GetType" cname="soup_socket_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="soup_socket_new">
        <parameters>
          <parameter name="optname1" type="const-char*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </constructor>
      <method name="ConnectAsync" cname="soup_socket_connect_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="SoupSocketCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="ConnectSync" cname="soup_socket_connect_sync">
        <return-type type="guint"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="GetFd" cname="soup_socket_get_fd">
        <return-type type="int"/>
      </method>
      <method name="Listen" cname="soup_socket_listen">
        <return-type type="gboolean"/>
      </method>
      <method name="StartSsl" cname="soup_socket_start_ssl">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="StartProxySsl" cname="soup_socket_start_proxy_ssl">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="ssl_host" type="const-char*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="IsSsl" cname="soup_socket_is_ssl">
        <return-type type="gboolean"/>
      </method>
      <method name="Disconnect" cname="soup_socket_disconnect">
        <return-type type="void"/>
      </method>
      <method name="IsConnected" cname="soup_socket_is_connected">
        <return-type type="gboolean"/>
      </method>
      <method name="GetLocalAddress" cname="soup_socket_get_local_address">
        <return-type type="SoupAddress*"/>
      </method>
      <method name="GetRemoteAddress" cname="soup_socket_get_remote_address">
        <return-type type="SoupAddress*"/>
      </method>
      <method name="Read" cname="soup_socket_read">
        <return-type type="int"/>
        <parameters>
          <parameter name="buffer" type="gpointer"/>
          <parameter name="len" type="gsize"/>
          <parameter name="nread" type="gsize*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ReadUntil" cname="soup_socket_read_until">
        <return-type type="int"/>
        <parameters>
          <parameter name="buffer" type="gpointer"/>
          <parameter name="len" type="gsize"/>
          <parameter name="boundary" type="gconstpointer"/>
          <parameter name="boundary_len" type="gsize"/>
          <parameter name="nread" type="gsize*"/>
          <parameter name="got_boundary" type="gboolean*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="Write" cname="soup_socket_write">
        <return-type type="int"/>
        <parameters>
          <parameter name="buffer" type="gconstpointer"/>
          <parameter name="len" type="gsize"/>
          <parameter name="nwrote" type="gsize*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <property name="AsyncContext" cname="async-context" type="gpointer" readable="true" writable="true"/>
      <property name="CleanDispose" cname="clean-dispose" type="gboolean" readable="true" writable="true"/>
      <property name="IsServer" cname="is-server" type="gboolean" readable="true" writable="false"/>
      <property name="LocalAddress" cname="local-address" type="SoupAddress*" readable="true" writable="true"/>
      <property name="NonBlocking" cname="non-blocking" type="gboolean" readable="true" writable="true"/>
      <property name="RemoteAddress" cname="remote-address" type="SoupAddress*" readable="true" writable="true"/>
      <property name="SslCreds" cname="ssl-creds" type="gpointer" readable="true" writable="true"/>
      <property name="SslStrict" cname="ssl-strict" type="gboolean" readable="true" writable="true"/>
      <property name="Timeout" cname="timeout" type="guint" readable="true" writable="true"/>
      <property name="TrustedCertificate" cname="trusted-certificate" type="gboolean" readable="true" writable="true"/>
      <field cname="parent" name="Parent" type="GObject"/>
      <signal name="Disconnected" cname="disconnected">
        <return-type type="void"/>
        <parameters>
          <parameter name="socket" type="SoupSocket*"/>
        </parameters>
      </signal>
      <signal name="NewConnection" cname="new-connection">
        <return-type type="void"/>
        <parameters>
          <parameter name="socket" type="SoupSocket*"/>
          <parameter name="_object" type="SoupSocket"/>
        </parameters>
      </signal>
      <signal name="Readable" cname="readable">
        <return-type type="void"/>
        <parameters>
          <parameter name="socket" type="SoupSocket*"/>
        </parameters>
      </signal>
      <signal name="Writable" cname="writable">
        <return-type type="void"/>
        <parameters>
          <parameter name="socket" type="SoupSocket*"/>
        </parameters>
      </signal>
    </object>
    <callback name="SocketCallback" cname="SoupSocketCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="sock" type="SoupSocket*"/>
        <parameter name="status" type="guint"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <enum name="SocketIOStatus" cname="SoupSocketIOStatus">
      <member cname="SOUP_SOCKET_OK" name="Ok"/>
      <member cname="SOUP_SOCKET_WOULD_BLOCK" name="WouldBlock"/>
      <member cname="SOUP_SOCKET_EOF" name="Eof"/>
      <member cname="SOUP_SOCKET_ERROR" name="Error"/>
    </enum>
    <struct name="URI" cname="SoupURI">
      <field cname="scheme" name="Scheme" type="char*"/>
      <field cname="user" name="User" type="char*"/>
      <field cname="password" name="Password" type="char*"/>
      <field cname="host" name="Host" type="char*"/>
      <field cname="port" name="Port" type="guint"/>
      <field cname="path" name="Path" type="char*"/>
      <field cname="query" name="Query" type="char*"/>
      <field cname="fragment" name="Fragment" type="char*"/>
      <constructor cname="soup_uri_new_with_base">
        <parameters>
          <parameter name="base" type="SoupURI*"/>
          <parameter name="uri_string" type="const-char*"/>
        </parameters>
      </constructor>
      <constructor cname="soup_uri_new">
        <parameters>
          <parameter name="uri_string" type="const-char*"/>
        </parameters>
      </constructor>
      <method name="ToString" cname="soup_uri_to_string">
        <return-type type="char*"/>
        <parameters>
          <parameter name="just_path_and_query" type="gboolean"/>
        </parameters>
      </method>
      <method name="Copy" cname="soup_uri_copy">
        <return-type type="SoupURI*"/>
      </method>
      <method name="Equal" cname="soup_uri_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="uri2" type="SoupURI*"/>
        </parameters>
      </method>
      <method name="Free" cname="soup_uri_free">
        <return-type type="void"/>
      </method>
      <method name="UsesDefaultPort" cname="soup_uri_uses_default_port">
        <return-type type="gboolean"/>
      </method>
      <method name="GetScheme" cname="soup_uri_get_scheme">
        <return-type type="const-char*"/>
      </method>
      <method name="SetScheme" cname="soup_uri_set_scheme">
        <return-type type="void"/>
        <parameters>
          <parameter name="scheme" type="const-char*"/>
        </parameters>
      </method>
      <method name="GetUser" cname="soup_uri_get_user">
        <return-type type="const-char*"/>
      </method>
      <method name="SetUser" cname="soup_uri_set_user">
        <return-type type="void"/>
        <parameters>
          <parameter name="user" type="const-char*"/>
        </parameters>
      </method>
      <method name="GetPassword" cname="soup_uri_get_password">
        <return-type type="const-char*"/>
      </method>
      <method name="SetPassword" cname="soup_uri_set_password">
        <return-type type="void"/>
        <parameters>
          <parameter name="password" type="const-char*"/>
        </parameters>
      </method>
      <method name="GetHost" cname="soup_uri_get_host">
        <return-type type="const-char*"/>
      </method>
      <method name="SetHost" cname="soup_uri_set_host">
        <return-type type="void"/>
        <parameters>
          <parameter name="host" type="const-char*"/>
        </parameters>
      </method>
      <method name="GetPort" cname="soup_uri_get_port">
        <return-type type="guint"/>
      </method>
      <method name="SetPort" cname="soup_uri_set_port">
        <return-type type="void"/>
        <parameters>
          <parameter name="port" type="guint"/>
        </parameters>
      </method>
      <method name="GetPath" cname="soup_uri_get_path">
        <return-type type="const-char*"/>
      </method>
      <method name="SetPath" cname="soup_uri_set_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="const-char*"/>
        </parameters>
      </method>
      <method name="GetQuery" cname="soup_uri_get_query">
        <return-type type="const-char*"/>
      </method>
      <method name="SetQuery" cname="soup_uri_set_query">
        <return-type type="void"/>
        <parameters>
          <parameter name="query" type="const-char*"/>
        </parameters>
      </method>
      <method name="SetQueryFromForm" cname="soup_uri_set_query_from_form">
        <return-type type="void"/>
        <parameters>
          <parameter name="form" type="GHashTable*"/>
        </parameters>
      </method>
      <method name="SetQueryFromFields" cname="soup_uri_set_query_from_fields">
        <return-type type="void"/>
        <parameters>
          <parameter name="first_field" type="const-char*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="GetFragment" cname="soup_uri_get_fragment">
        <return-type type="const-char*"/>
      </method>
      <method name="SetFragment" cname="soup_uri_set_fragment">
        <return-type type="void"/>
        <parameters>
          <parameter name="fragment" type="const-char*"/>
        </parameters>
      </method>
      <method name="CopyHost" cname="soup_uri_copy_host">
        <return-type type="SoupURI*"/>
      </method>
    </struct>
    <enum name="XMLRPCError" cname="SoupXMLRPCError">
      <member cname="SOUP_XMLRPC_ERROR_ARGUMENTS" name="Arguments"/>
      <member cname="SOUP_XMLRPC_ERROR_RETVAL" name="Retval"/>
    </enum>
    <enum name="XMLRPCFault" cname="SoupXMLRPCFault">
      <member cname="SOUP_XMLRPC_FAULT_TRANSPORT_ERROR" name="TransportError"/>
      <member cname="SOUP_XMLRPC_FAULT_SYSTEM_ERROR" name="SystemError"/>
      <member cname="SOUP_XMLRPC_FAULT_APPLICATION_ERROR" name="ApplicationError"/>
      <member cname="SOUP_XMLRPC_FAULT_SERVER_ERROR_INVALID_XML_RPC" name="ServerErrorInvalidXmlRpc"/>
      <member cname="SOUP_XMLRPC_FAULT_SERVER_ERROR_REQUESTED_METHOD_NOT_FOUND" name="ServerErrorRequestedMethodNotFound"/>
      <member cname="SOUP_XMLRPC_FAULT_SERVER_ERROR_INVALID_METHOD_PARAMETERS" name="ServerErrorInvalidMethodParameters"/>
      <member cname="SOUP_XMLRPC_FAULT_SERVER_ERROR_INTERNAL_XML_RPC_ERROR" name="ServerErrorInternalXmlRpcError"/>
      <member cname="SOUP_XMLRPC_FAULT_PARSE_ERROR_NOT_WELL_FORMED" name="ParseErrorNotWellFormed"/>
      <member cname="SOUP_XMLRPC_FAULT_PARSE_ERROR_UNSUPPORTED_ENCODING" name="ParseErrorUnsupportedEncoding"/>
      <member cname="SOUP_XMLRPC_FAULT_PARSE_ERROR_INVALID_CHARACTER_FOR_ENCODING" name="ParseErrorInvalidCharacterForEncoding"/>
    </enum>
    <object name="Globals" cname="SoupGlobals">
      <method name="AddCompletion" cname="soup_add_completion" shared="true">
        <return-type type="GSource*"/>
        <parameters>
          <parameter name="async_context" type="GMainContext*"/>
          <parameter name="function" type="GSourceFunc"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="AddIdle" cname="soup_add_idle" shared="true">
        <return-type type="GSource*"/>
        <parameters>
          <parameter name="async_context" type="GMainContext*"/>
          <parameter name="function" type="GSourceFunc"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="AddIoWatch" cname="soup_add_io_watch" shared="true">
        <return-type type="GSource*"/>
        <parameters>
          <parameter name="async_context" type="GMainContext*"/>
          <parameter name="chan" type="GIOChannel*"/>
          <parameter name="condition" type="GIOCondition"/>
          <parameter name="function" type="GIOFunc"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="AddTimeout" cname="soup_add_timeout" shared="true">
        <return-type type="GSource*"/>
        <parameters>
          <parameter name="async_context" type="GMainContext*"/>
          <parameter name="interval" type="guint"/>
          <parameter name="function" type="GSourceFunc"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="CookieParse" cname="soup_cookie_parse" shared="true">
        <return-type type="SoupCookie*"/>
        <parameters>
          <parameter name="header" type="const-char*"/>
          <parameter name="origin" type="SoupURI*"/>
        </parameters>
      </method>
      <method name="CookiesFree" cname="soup_cookies_free" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="cookies" type="GSList*"/>
        </parameters>
      </method>
      <method name="CookiesFromRequest" cname="soup_cookies_from_request" shared="true">
        <return-type type="GSList*"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
        </parameters>
      </method>
      <method name="CookiesFromResponse" cname="soup_cookies_from_response" shared="true">
        <return-type type="GSList*"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
        </parameters>
      </method>
      <method name="CookiesToCookieHeader" cname="soup_cookies_to_cookie_header" shared="true">
        <return-type type="char*"/>
        <parameters>
          <parameter name="cookies" type="GSList*"/>
        </parameters>
      </method>
      <method name="CookiesToRequest" cname="soup_cookies_to_request" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="cookies" type="GSList*"/>
          <parameter name="msg" type="SoupMessage*"/>
        </parameters>
      </method>
      <method name="CookiesToResponse" cname="soup_cookies_to_response" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="cookies" type="GSList*"/>
          <parameter name="msg" type="SoupMessage*"/>
        </parameters>
      </method>
      <method name="FormDecode" cname="soup_form_decode" shared="true">
        <return-type type="GHashTable*"/>
        <parameters>
          <parameter name="encoded_form" type="const-char*"/>
        </parameters>
      </method>
      <method name="FormDecodeMultipart" cname="soup_form_decode_multipart" shared="true">
        <return-type type="GHashTable*"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
          <parameter name="file_control_name" type="const-char*"/>
          <parameter name="filename" type="char**"/>
          <parameter name="content_type" type="char**"/>
          <parameter name="file" type="SoupBuffer**"/>
        </parameters>
      </method>
      <method name="FormEncode" cname="soup_form_encode" shared="true">
        <return-type type="char*"/>
        <parameters>
          <parameter name="first_field" type="const-char*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="FormEncodeDatalist" cname="soup_form_encode_datalist" shared="true">
        <return-type type="char*"/>
        <parameters>
          <parameter name="form_data_set" type="GData**"/>
        </parameters>
      </method>
      <method name="FormEncodeHash" cname="soup_form_encode_hash" shared="true">
        <return-type type="char*"/>
        <parameters>
          <parameter name="form_data_set" type="GHashTable*"/>
        </parameters>
      </method>
      <method name="FormRequestNew" cname="soup_form_request_new" shared="true">
        <return-type type="SoupMessage*"/>
        <parameters>
          <parameter name="method" type="const-char*"/>
          <parameter name="uri" type="const-char*"/>
          <parameter name="first_field" type="const-char*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="FormRequestNewFromDatalist" cname="soup_form_request_new_from_datalist" shared="true">
        <return-type type="SoupMessage*"/>
        <parameters>
          <parameter name="method" type="const-char*"/>
          <parameter name="uri" type="const-char*"/>
          <parameter name="form_data_set" type="GData**"/>
        </parameters>
      </method>
      <method name="FormRequestNewFromHash" cname="soup_form_request_new_from_hash" shared="true">
        <return-type type="SoupMessage*"/>
        <parameters>
          <parameter name="method" type="const-char*"/>
          <parameter name="uri" type="const-char*"/>
          <parameter name="form_data_set" type="GHashTable*"/>
        </parameters>
      </method>
      <method name="FormRequestNewFromMultipart" cname="soup_form_request_new_from_multipart" shared="true">
        <return-type type="SoupMessage*"/>
        <parameters>
          <parameter name="uri" type="const-char*"/>
          <parameter name="multipart" type="SoupMultipart*"/>
        </parameters>
      </method>
      <method name="HeaderContains" cname="soup_header_contains" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="header" type="const-char*"/>
          <parameter name="token" type="const-char*"/>
        </parameters>
      </method>
      <method name="HeaderFreeList" cname="soup_header_free_list" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="list" type="GSList*"/>
        </parameters>
      </method>
      <method name="HeaderFreeParamList" cname="soup_header_free_param_list" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="param_list" type="GHashTable*"/>
        </parameters>
      </method>
      <method name="HeaderGStringAppendParam" cname="soup_header_g_string_append_param" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="string" type="GString*"/>
          <parameter name="name" type="const-char*"/>
          <parameter name="value" type="const-char*"/>
        </parameters>
      </method>
      <method name="HeaderGStringAppendParamQuoted" cname="soup_header_g_string_append_param_quoted" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="string" type="GString*"/>
          <parameter name="name" type="const-char*"/>
          <parameter name="value" type="const-char*"/>
        </parameters>
      </method>
      <method name="HeaderParseList" cname="soup_header_parse_list" shared="true">
        <return-type type="GSList*"/>
        <parameters>
          <parameter name="header" type="const-char*"/>
        </parameters>
      </method>
      <method name="HeaderParseParamList" cname="soup_header_parse_param_list" shared="true">
        <return-type type="GHashTable*"/>
        <parameters>
          <parameter name="header" type="const-char*"/>
        </parameters>
      </method>
      <method name="HeaderParseQualityList" cname="soup_header_parse_quality_list" shared="true">
        <return-type type="GSList*"/>
        <parameters>
          <parameter name="header" type="const-char*"/>
          <parameter name="unacceptable" type="GSList**"/>
        </parameters>
      </method>
      <method name="HeaderParseSemiParamList" cname="soup_header_parse_semi_param_list" shared="true">
        <return-type type="GHashTable*"/>
        <parameters>
          <parameter name="header" type="const-char*"/>
        </parameters>
      </method>
      <method name="HeadersParse" cname="soup_headers_parse" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="str" type="const-char*"/>
          <parameter name="len" type="int"/>
          <parameter name="dest" type="SoupMessageHeaders*"/>
        </parameters>
      </method>
      <method name="HeadersParseRequest" cname="soup_headers_parse_request" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="str" type="const-char*"/>
          <parameter name="len" type="int"/>
          <parameter name="req_headers" type="SoupMessageHeaders*"/>
          <parameter name="req_method" type="char**"/>
          <parameter name="req_path" type="char**"/>
          <parameter name="ver" type="SoupHTTPVersion*"/>
        </parameters>
      </method>
      <method name="HeadersParseResponse" cname="soup_headers_parse_response" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="str" type="const-char*"/>
          <parameter name="len" type="int"/>
          <parameter name="headers" type="SoupMessageHeaders*"/>
          <parameter name="ver" type="SoupHTTPVersion*"/>
          <parameter name="status_code" type="guint*"/>
          <parameter name="reason_phrase" type="char**"/>
        </parameters>
      </method>
      <method name="HeadersParseStatusLine" cname="soup_headers_parse_status_line" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="status_line" type="const-char*"/>
          <parameter name="ver" type="SoupHTTPVersion*"/>
          <parameter name="status_code" type="guint*"/>
          <parameter name="reason_phrase" type="char**"/>
        </parameters>
      </method>
      <method name="StatusGetPhrase" cname="soup_status_get_phrase" shared="true">
        <return-type type="const-char*"/>
        <parameters>
          <parameter name="status_code" type="guint"/>
        </parameters>
      </method>
      <method name="StatusProxify" cname="soup_status_proxify" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="status_code" type="guint"/>
        </parameters>
      </method>
      <method name="StrCaseEqual" cname="soup_str_case_equal" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="v1" type="gconstpointer"/>
          <parameter name="v2" type="gconstpointer"/>
        </parameters>
      </method>
      <method name="StrCaseHash" cname="soup_str_case_hash" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="key" type="gconstpointer"/>
        </parameters>
      </method>
      <method name="UriDecode" cname="soup_uri_decode" shared="true">
        <return-type type="char*"/>
        <parameters>
          <parameter name="part" type="const-char*"/>
        </parameters>
      </method>
      <method name="UriEncode" cname="soup_uri_encode" shared="true">
        <return-type type="char*"/>
        <parameters>
          <parameter name="part" type="const-char*"/>
          <parameter name="escape_extra" type="const-char*"/>
        </parameters>
      </method>
      <method name="UriHostEqual" cname="soup_uri_host_equal" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="v1" type="gconstpointer"/>
          <parameter name="v2" type="gconstpointer"/>
        </parameters>
      </method>
      <method name="UriHostHash" cname="soup_uri_host_hash" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="key" type="gconstpointer"/>
        </parameters>
      </method>
      <method name="UriNormalize" cname="soup_uri_normalize" shared="true">
        <return-type type="char*"/>
        <parameters>
          <parameter name="part" type="const-char*"/>
          <parameter name="unescape_extra" type="const-char*"/>
        </parameters>
      </method>
      <method name="ValueArrayAppend" cname="soup_value_array_append" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="array" type="GValueArray*"/>
          <parameter name="type" type="GType"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="ValueArrayAppendVals" cname="soup_value_array_append_vals" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="array" type="GValueArray*"/>
          <parameter name="first_type" type="GType"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="ValueArrayGetNth" cname="soup_value_array_get_nth" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="array" type="GValueArray*"/>
          <parameter name="index_" type="guint"/>
          <parameter name="type" type="GType"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="ValueArrayInsert" cname="soup_value_array_insert" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="array" type="GValueArray*"/>
          <parameter name="index_" type="guint"/>
          <parameter name="type" type="GType"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="ValueArrayNew" cname="soup_value_array_new" shared="true">
        <return-type type="GValueArray*"/>
      </method>
      <method name="ValueArrayNewWithVals" cname="soup_value_array_new_with_vals" shared="true">
        <return-type type="GValueArray*"/>
        <parameters>
          <parameter name="first_type" type="GType"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="ValueHashInsert" cname="soup_value_hash_insert" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="hash" type="GHashTable*"/>
          <parameter name="key" type="const-char*"/>
          <parameter name="type" type="GType"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="ValueHashInsertVals" cname="soup_value_hash_insert_vals" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="hash" type="GHashTable*"/>
          <parameter name="first_key" type="const-char*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="ValueHashInsertValue" cname="soup_value_hash_insert_value" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="hash" type="GHashTable*"/>
          <parameter name="key" type="const-char*"/>
          <parameter name="value" type="GValue*"/>
        </parameters>
      </method>
      <method name="ValueHashLookup" cname="soup_value_hash_lookup" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="hash" type="GHashTable*"/>
          <parameter name="key" type="const-char*"/>
          <parameter name="type" type="GType"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="ValueHashLookupVals" cname="soup_value_hash_lookup_vals" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="hash" type="GHashTable*"/>
          <parameter name="first_key" type="const-char*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="ValueHashNew" cname="soup_value_hash_new" shared="true">
        <return-type type="GHashTable*"/>
      </method>
      <method name="ValueHashNewWithVals" cname="soup_value_hash_new_with_vals" shared="true">
        <return-type type="GHashTable*"/>
        <parameters>
          <parameter name="first_key" type="const-char*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="XmlrpcBuildFault" cname="soup_xmlrpc_build_fault" shared="true">
        <return-type type="char*"/>
        <parameters>
          <parameter name="fault_code" type="int"/>
          <parameter name="fault_format" type="const-char*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="XmlrpcBuildMethodCall" cname="soup_xmlrpc_build_method_call" shared="true">
        <return-type type="char*"/>
        <parameters>
          <parameter name="method_name" type="const-char*"/>
          <parameter name="params" type="GValue*"/>
          <parameter name="n_params" type="int"/>
        </parameters>
      </method>
      <method name="XmlrpcBuildMethodResponse" cname="soup_xmlrpc_build_method_response" shared="true">
        <return-type type="char*"/>
        <parameters>
          <parameter name="value" type="GValue*"/>
        </parameters>
      </method>
      <method name="XmlrpcExtractMethodCall" cname="soup_xmlrpc_extract_method_call" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="method_call" type="const-char*"/>
          <parameter name="length" type="int"/>
          <parameter name="method_name" type="char**"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="XmlrpcExtractMethodResponse" cname="soup_xmlrpc_extract_method_response" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="method_response" type="const-char*"/>
          <parameter name="length" type="int"/>
          <parameter name="error" type="GError**"/>
          <parameter name="type" type="GType"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="XmlrpcFaultQuark" cname="soup_xmlrpc_fault_quark" shared="true">
        <return-type type="GQuark"/>
      </method>
      <method name="XmlrpcParseMethodCall" cname="soup_xmlrpc_parse_method_call" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="method_call" type="const-char*"/>
          <parameter name="length" type="int"/>
          <parameter name="method_name" type="char**"/>
          <parameter name="params" type="GValueArray**"/>
        </parameters>
      </method>
      <method name="XmlrpcParseMethodResponse" cname="soup_xmlrpc_parse_method_response" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="method_response" type="const-char*"/>
          <parameter name="length" type="int"/>
          <parameter name="value" type="GValue*"/>
        </parameters>
      </method>
      <method name="XmlrpcRequestNew" cname="soup_xmlrpc_request_new" shared="true">
        <return-type type="SoupMessage*"/>
        <parameters>
          <parameter name="uri" type="const-char*"/>
          <parameter name="method_name" type="const-char*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="XmlrpcSetFault" cname="soup_xmlrpc_set_fault" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
          <parameter name="fault_code" type="int"/>
          <parameter name="fault_format" type="const-char*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="XmlrpcSetResponse" cname="soup_xmlrpc_set_response" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="msg" type="SoupMessage*"/>
          <parameter name="type" type="GType"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
    </object>
  </namespace>
</api>
